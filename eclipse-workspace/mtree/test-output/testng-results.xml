<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-14T14:53:02 SAST" name="Suite" finished-at="2022-01-14T14:53:17 SAST" duration-ms="15296">
    <groups>
    </groups>
    <test started-at="2022-01-14T14:53:02 SAST" name="Test" finished-at="2022-01-14T14:53:17 SAST" duration-ms="15296">
      <class name="com.myPractice.mtree.MyTestNG">
        <test-method is-config="true" signature="setExtent()[pri:0, instance:com.myPractice.mtree.MyTestNG@57cf54e1]" started-at="2022-01-14T14:53:02 SAST" name="setExtent" finished-at="2022-01-14T14:53:02 SAST" duration-ms="372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method signature="test1(java.lang.String)[pri:0, instance:com.myPractice.mtree.MyTestNG@57cf54e1]" started-at="2022-01-14T14:53:02 SAST" name="test1" finished-at="2022-01-14T14:53:16 SAST" duration-ms="13920" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[invalid session id
Build info: version: '4.1.1', revision: 'e8fcc2cecf'
System info: host: 'WSAMZN-HLBJ87PA', ip: '10.141.10.153', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [add4df35db5f2e9a801f4e461c60a366, getCurrentUrl {}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 97.0.1072.62, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:52801}, msedge: {msedgedriverVersion: 96.0.1054.62 (f97cb2ce0103f..., userDataDir: D:\Users\XY59005\AppData\Lo...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52801/devtoo..., se:cdpVersion: 97.0.1072.62, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: add4df35db5f2e9a801f4e461c60a366]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: invalid session id
Build info: version: '4.1.1', revision: 'e8fcc2cecf'
System info: host: 'WSAMZN-HLBJ87PA', ip: '10.141.10.153', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [add4df35db5f2e9a801f4e461c60a366, getCurrentUrl {}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 97.0.1072.62, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:52801}, msedge: {msedgedriverVersion: 96.0.1054.62 (f97cb2ce0103f..., userDataDir: D:\Users\XY59005\AppData\Lo...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52801/devtoo..., se:cdpVersion: 97.0.1072.62, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: add4df35db5f2e9a801f4e461c60a366
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:598)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebDriver.getCurrentUrl(RemoteWebDriver.java:324)
at com.myPractice.mtree.MyTestNG.test1(MyTestNG.java:66)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test2(java.lang.String,java.lang.String)[pri:0, instance:com.myPractice.mtree.MyTestNG@57cf54e1]" started-at="2022-01-14T14:53:16 SAST" name="test2" data-provider="dp" finished-at="2022-01-14T14:53:16 SAST" duration-ms="36" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome has started]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge has started]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:com.myPractice.mtree.MyTestNG@57cf54e1]" started-at="2022-01-14T14:53:16 SAST" name="endReport" finished-at="2022-01-14T14:53:17 SAST" duration-ms="902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.myPractice.mtree.MyTestNG -->
    </test> <!-- Test -->
    <test started-at="2022-01-14T14:53:02 SAST" name="Test1" finished-at="2022-01-14T14:53:17 SAST" duration-ms="15187">
      <class name="com.myPractice.mtree.MyTestNG">
        <test-method is-config="true" signature="setExtent()[pri:0, instance:com.myPractice.mtree.MyTestNG@3527942a]" started-at="2022-01-14T14:53:02 SAST" name="setExtent" finished-at="2022-01-14T14:53:02 SAST" duration-ms="372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method signature="test1(java.lang.String)[pri:0, instance:com.myPractice.mtree.MyTestNG@3527942a]" started-at="2022-01-14T14:53:02 SAST" name="test1" finished-at="2022-01-14T14:53:17 SAST" duration-ms="14595" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test2(java.lang.String,java.lang.String)[pri:0, instance:com.myPractice.mtree.MyTestNG@3527942a]" started-at="2022-01-14T14:53:17 SAST" name="test2" data-provider="dp" finished-at="2022-01-14T14:53:17 SAST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome has started]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge has started]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:com.myPractice.mtree.MyTestNG@3527942a]" started-at="2022-01-14T14:53:17 SAST" name="endReport" finished-at="2022-01-14T14:53:17 SAST" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.myPractice.mtree.MyTestNG -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
